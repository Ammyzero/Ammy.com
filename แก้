<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏≠‡∏á‡∏Æ‡∏≠‡∏ï‡∏™‡∏õ‡∏≠‡∏ï</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);
            color: #ffffff;
            min-height: 100vh;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            text-align: center;
            margin-bottom: 30px;
            padding: 20px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        h1 {
            color: #00d4ff;
            margin-bottom: 10px;
            font-size: 2.5em;
            text-shadow: 0 0 20px rgba(0, 212, 255, 0.5);
        }

        .form-container {
            background: rgba(0, 0, 0, 0.6);
            padding: 30px;
            border-radius: 15px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            margin-bottom: 20px;
            backdrop-filter: blur(10px);
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: #00d4ff;
            font-weight: 500;
        }

        input[type="text"], input[type="email"], input[type="tel"], input[type="date"], input[type="time"], select {
            width: 100%;
            padding: 12px;
            border: 2px solid rgba(255, 255, 255, 0.2);
            border-radius: 8px;
            background: rgba(255, 255, 255, 0.1);
            color: #ffffff;
            font-size: 16px;
            transition: all 0.3s ease;
        }

        input[type="text"]:focus, input[type="email"]:focus, input[type="tel"]:focus, input[type="date"]:focus, input[type="time"]:focus, select:focus {
            outline: none;
            border-color: #00d4ff;
            box-shadow: 0 0 15px rgba(0, 212, 255, 0.3);
        }

        select option {
            background: #2d2d2d;
            color: #ffffff;
        }

        button {
            background: linear-gradient(45deg, #00d4ff, #0099cc);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(0, 212, 255, 0.3);
        }

        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 212, 255, 0.4);
        }

        .admin-btn {
            background: linear-gradient(45deg, #ff6b35, #f7931e);
        }

        .admin-btn:hover {
            box-shadow: 0 6px 20px rgba(255, 107, 53, 0.4);
        }

        .admin-container {
            display: none;
            background: rgba(0, 0, 0, 0.8);
            padding: 30px;
            border-radius: 15px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            margin-top: 20px;
        }

        .booking-item {
            background: rgba(255, 255, 255, 0.1);
            padding: 15px;
            margin-bottom: 10px;
            border-radius: 8px;
            border-left: 4px solid #00d4ff;
        }

        .booking-item h4 {
            margin-bottom: 10px;
            color: #00d4ff;
        }

        .booking-info {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 10px;
            font-size: 14px;
        }

        .success-message {
            background: linear-gradient(45deg, #4CAF50, #45a049);
            color: white;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            text-align: center;
            display: none;
        }

        .password-container {
            display: none;
            background: rgba(0, 0, 0, 0.9);
            padding: 30px;
            border-radius: 15px;
            margin-top: 20px;
            text-align: center;
        }

        .delete-btn {
            background: linear-gradient(45deg, #ff4757, #c44569);
            padding: 5px 10px;
            font-size: 12px;
            margin-left: 10px;
        }

        .stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 15px;
            margin-bottom: 20px;
        }

        .stat-card {
            background: rgba(0, 212, 255, 0.1);
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            border: 1px solid rgba(0, 212, 255, 0.3);
        }

        .stat-number {
            font-size: 2em;
            font-weight: bold;
            color: #00d4ff;
        }

        .backup-section {
            background: rgba(0, 0, 0, 0.5);
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 20px;
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .backup-btn {
            background: linear-gradient(45deg, #28a745, #20c997);
            margin-right: 10px;
        }

        .clear-btn {
            background: linear-gradient(45deg, #dc3545, #c82333);
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üî• ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏≠‡∏á‡∏Æ‡∏≠‡∏ï‡∏™‡∏õ‡∏≠‡∏ï</h1>
            <p>‡∏à‡∏≠‡∏á‡∏Æ‡∏≠‡∏ï‡∏™‡∏õ‡∏≠‡∏ï‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢‡πÜ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</p>
        </div>

        <!-- Success Message -->
        <div class="success-message" id="successMessage">
            ‚úÖ ‡∏à‡∏≠‡∏á‡∏Æ‡∏≠‡∏ï‡∏™‡∏õ‡∏≠‡∏ï‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!
        </div>

        <!-- Booking Form -->
        <div class="form-container" id="bookingForm">
            <h2 style="margin-bottom: 20px; color: #00d4ff;">üìù ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏à‡∏≠‡∏á‡∏Æ‡∏≠‡∏ï‡∏™‡∏õ‡∏≠‡∏ï</h2>
            
            <div class="form-group">
                <label for="name">üë§ ‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• *</label>
                <input type="text" id="name" required>
            </div>

            <div class="form-group">
                <label for="phone">üì± ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå *</label>
                <input type="tel" id="phone" required>
            </div>

            <div class="form-group">
                <label for="email">üìß ‡∏≠‡∏µ‡πÄ‡∏°‡∏•</label>
                <input type="email" id="email">
            </div>

            <div class="form-group">
                <label for="date">üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô *</label>
                <input type="date" id="date" required>
            </div>

            <div class="form-group">
                <label for="timeStart">‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏° *</label>
                <input type="time" id="timeStart" required>
            </div>

            <div class="form-group">
                <label for="timeEnd">‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î *</label>
                <input type="time" id="timeEnd" required>
            </div>

            <div class="form-group">
                <label for="purpose">üéØ ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</label>
                <select id="purpose">
                    <option value="‡∏ó‡∏≥‡∏á‡∏≤‡∏ô">‡∏ó‡∏≥‡∏á‡∏≤‡∏ô</option>
                    <option value="‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°">‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°</option>
                    <option value="‡πÄ‡∏£‡∏µ‡∏¢‡∏ô">‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå</option>
                    <option value="‡∏ö‡∏±‡∏ô‡πÄ‡∏ó‡∏¥‡∏á">‡∏ö‡∏±‡∏ô‡πÄ‡∏ó‡∏¥‡∏á</option>
                    <option value="‡∏≠‡∏∑‡πà‡∏ô‡πÜ">‡∏≠‡∏∑‡πà‡∏ô‡πÜ</option>
                </select>
            </div>

            <button onclick="submitBooking()" style="width: 100%; margin-bottom: 15px;">
                üöÄ ‡∏à‡∏≠‡∏á‡∏Æ‡∏≠‡∏ï‡∏™‡∏õ‡∏≠‡∏ï
            </button>

            <button onclick="showPasswordPrompt()" class="admin-btn" style="width: 100%;">
                üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
            </button>
        </div>

        <!-- Password Prompt -->
        <div class="password-container" id="passwordContainer">
            <h3 style="margin-bottom: 20px;">üîê ‡πÉ‡∏™‡πà‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô</h3>
            <input type="password" id="adminPassword" placeholder="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô" style="margin-bottom: 15px;">
            <button onclick="checkPassword()">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</button>
            <button onclick="hidePasswordPrompt()" class="admin-btn">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
        </div>

        <!-- Admin Panel -->
        <div class="admin-container" id="adminPanel">
            <h2 style="margin-bottom: 20px; color: #ff6b35;">üõ°Ô∏è ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô</h2>
            
            <div class="stats" id="statsContainer">
                <div class="stat-card">
                    <div class="stat-number" id="totalBookings">0</div>
                    <div>‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="todayBookings">0</div>
                    <div>‡∏à‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="upcomingBookings">0</div>
                    <div>‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏°‡∏≤‡∏ñ‡∏∂‡∏á</div>
                </div>
            </div>

            <!-- Backup and Data Management Section -->
            <div class="backup-section">
                <h3 style="margin-bottom: 15px; color: #00d4ff;">üíæ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h3>
                <button onclick="exportData()" class="backup-btn">üìä ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• CSV</button>
                <button onclick="backupData()" class="backup-btn">üíæ ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• JSON</button>
                <input type="file" id="restoreFile" accept=".json" style="display: none;" onchange="restoreData()">
                <button onclick="document.getElementById('restoreFile').click()" class="backup-btn">üìÇ ‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</button>
                <button onclick="clearAllData()" class="clear-btn">üóëÔ∏è ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</button>
            </div>

            <button onclick="hideAdmin()" class="admin-btn" style="margin-bottom: 20px;">‚ùå ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö</button>
            
            <h3 style="margin-bottom: 15px; color: #00d4ff;">üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h3>
            <div id="bookingsList"></div>
        </div>
    </div>

    <script>
        let bookings = [];
        let bookingId = 1;

        // Storage keys
        const BOOKINGS_KEY = 'hotspot_bookings';
        const BOOKING_ID_KEY = 'hotspot_booking_id';

        // Load bookings from localStorage on page load
        function loadBookings() {
            try {
                const savedBookings = localStorage.getItem(BOOKINGS_KEY);
                const savedBookingId = localStorage.getItem(BOOKING_ID_KEY);
                
                if (savedBookings) {
                    bookings = JSON.parse(savedBookings);
                }
                
                if (savedBookingId) {
                    bookingId = parseInt(savedBookingId);
                }
                
                updateAdminDisplay();
            } catch (error) {
                console.error('Error loading bookings:', error);
                bookings = [];
                bookingId = 1;
            }
        }

        // Save bookings to localStorage
        function saveBookings() {
            try {
                localStorage.setItem(BOOKINGS_KEY, JSON.stringify(bookings));
                localStorage.setItem(BOOKING_ID_KEY, bookingId.toString());
            } catch (error) {
                console.error('Error saving bookings:', error);
                alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
            }
        }

        function submitBooking() {
            const name = document.getElementById('name').value;
            const phone = document.getElementById('phone').value;
            const email = document.getElementById('email').value;
            const date = document.getElementById('date').value;
            const timeStart = document.getElementById('timeStart').value;
            const timeEnd = document.getElementById('timeEnd').value;
            const purpose = document.getElementById('purpose').value;

            if (!name || !phone || !date || !timeStart || !timeEnd) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô (*)');
                return;
            }

            // Check time validity
            if (timeStart >= timeEnd) {
                alert('‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î');
                return;
            }

            // Check for time conflicts
            const conflictBooking = bookings.find(booking => 
                booking.date === date && 
                ((timeStart >= booking.timeStart && timeStart < booking.timeEnd) ||
                 (timeEnd > booking.timeStart && timeEnd <= booking.timeEnd) ||
                 (timeStart <= booking.timeStart && timeEnd >= booking.timeEnd))
            );

            if (conflictBooking) {
                alert(`‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß ‡πÇ‡∏î‡∏¢ ${conflictBooking.name} (${conflictBooking.timeStart}-${conflictBooking.timeEnd})`);
                return;
            }

            const booking = {
                id: bookingId++,
                name: name,
                phone: phone,
                email: email || '-',
                date: date,
                timeStart: timeStart,
                timeEnd: timeEnd,
                purpose: purpose,
                bookingTime: new Date().toLocaleString('th-TH')
            };

            bookings.push(booking);
            saveBookings(); // Save to localStorage

            // Show success message
            document.getElementById('successMessage').style.display = 'block';
            
            // Clear form
            document.getElementById('name').value = '';
            document.getElementById('phone').value = '';
            document.getElementById('email').value = '';
            document.getElementById('date').value = '';
            document.getElementById('timeStart').value = '';
            document.getElementById('timeEnd').value = '';
            document.getElementById('purpose').selectedIndex = 0;

            // Hide success message after 3 seconds
            setTimeout(() => {
                document.getElementById('successMessage').style.display = 'none';
            }, 3000);

            updateAdminDisplay();
        }

        function showPasswordPrompt() {
            document.getElementById('passwordContainer').style.display = 'block';
            document.getElementById('bookingForm').style.display = 'none';
        }

        function hidePasswordPrompt() {
            document.getElementById('passwordContainer').style.display = 'none';
            document.getElementById('bookingForm').style.display = 'block';
            document.getElementById('adminPassword').value = '';
        }

        function checkPassword() {
            const password = document.getElementById('adminPassword').value;
            if (password === '2533') {
                document.getElementById('passwordContainer').style.display = 'none';
                document.getElementById('bookingForm').style.display = 'none';
                document.getElementById('adminPanel').style.display = 'block';
                updateAdminDisplay();
            } else {
                alert('‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
            }
        }

        function hideAdmin() {
            document.getElementById('adminPanel').style.display = 'none';
            document.getElementById('bookingForm').style.display = 'block';
            document.getElementById('adminPassword').value = '';
        }

        function updateAdminDisplay() {
            const bookingsList = document.getElementById('bookingsList');
            const today = new Date().toISOString().split('T')[0];
            
            // Update statistics
            document.getElementById('totalBookings').textContent = bookings.length;
            
            const todayBookings = bookings.filter(booking => booking.date === today);
            document.getElementById('todayBookings').textContent = todayBookings.length;
            
            const upcomingBookings = bookings.filter(booking => booking.date >= today);
            document.getElementById('upcomingBookings').textContent = upcomingBookings.length;

            if (bookings.length === 0) {
                bookingsList.innerHTML = '<p style="text-align: center; color: #666;">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Æ‡∏≠‡∏ï‡∏™‡∏õ‡∏≠‡∏ï</p>';
                return;
            }

            // Sort bookings by date and time
            const sortedBookings = [...bookings].sort((a, b) => {
                if (a.date !== b.date) {
                    return new Date(a.date) - new Date(b.date);
                }
                return a.timeStart.localeCompare(b.timeStart);
            });

            let html = '';
            sortedBookings.forEach(booking => {
                html += `
                    <div class="booking-item">
                        <h4>üìã ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á #${booking.id} - ${booking.name}
                            <button class="delete-btn" onclick="deleteBooking(${booking.id})">üóëÔ∏è ‡∏•‡∏ö</button>
                        </h4>
                        <div class="booking-info">
                            <div><strong>üì± ‡πÄ‡∏ö‡∏≠‡∏£‡πå:</strong> ${booking.phone}</div>
                            <div><strong>üìß ‡∏≠‡∏µ‡πÄ‡∏°‡∏•:</strong> ${booking.email}</div>
                            <div><strong>üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:</strong> ${formatDate(booking.date)}</div>
                            <div><strong>‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤:</strong> ${booking.timeStart} - ${booking.timeEnd}</div>
                            <div><strong>üéØ ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå:</strong> ${booking.purpose}</div>
                            <div><strong>üìù ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á:</strong> ${booking.bookingTime}</div>
                        </div>
                    </div>
                `;
            });
            bookingsList.innerHTML = html;
        }

        function deleteBooking(id) {
            if (confirm('‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
                bookings = bookings.filter(booking => booking.id !== id);
                saveBookings(); // Save changes to localStorage
                updateAdminDisplay();
            }
        }

        function formatDate(dateString) {
            const options = { 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric',
                weekday: 'long'
            };
            return new Date(dateString).toLocaleDateString('th-TH', options);
        }

        function exportData() {
            if (bookings.length === 0) {
                alert('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å');
                return;
            }

            let csvContent = "‡∏•‡∏≥‡∏î‡∏±‡∏ö,‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•,‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå,‡∏≠‡∏µ‡πÄ‡∏°‡∏•,‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô,‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°,‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î,‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå,‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á\n";
            
            bookings.forEach(booking => {
                csvContent += `${booking.id},"${booking.name}","${booking.phone}","${booking.email}","${booking.date}","${booking.timeStart}","${booking.timeEnd}","${booking.purpose}","${booking.bookingTime}"\n`;
            });

            const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
            const link = document.createElement("a");
            
            if (link.download !== undefined) {
                const url = URL.createObjectURL(blob);
                link.setAttribute("href", url);
                link.setAttribute("download", `hotspot_bookings_${new Date().toISOString().split('T')[0]}.csv`);
                link.style.visibility = 'hidden';
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            }
        }

        function backupData() {
            if (bookings.length === 0) {
                alert('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏™‡∏≥‡∏£‡∏≠‡∏á');
                return;
            }

            const backupData = {
                bookings: bookings,
                bookingId: bookingId,
                timestamp: new Date().toISOString(),
                version: '1.0'
            };

            const blob = new Blob([JSON.stringify(backupData, null, 2)], { type: 'application/json' });
            const link = document.createElement("a");
            
            if (link.download !== undefined) {
                const url = URL.createObjectURL(blob);
                link.setAttribute("href", url);
                link.setAttribute("download", `hotspot_backup_${new Date().toISOString().split('T')[0]}.json`);
                link.style.visibility = 'hidden';
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            }
        }

        function restoreData() {
            const file = document.getElementById('restoreFile').files[0];
            if (!file) return;

            const reader = new FileReader();
            reader.onload = function(e) {
                try {
                    const backupData = JSON.parse(e.target.result);
                    
                    if (backupData.bookings && Array.isArray(backupData.bookings)) {
                        if (confirm('‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏∞‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
                            bookings = backupData.bookings;
                            bookingId = backupData.bookingId || 1;
                            saveBookings();
                            updateAdminDisplay();
                            alert('‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!');
                        }
                    } else {
                        alert('‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
                    }
                } catch (error) {
                    alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏£‡∏≠‡∏á');
                }
                document.getElementById('restoreFile').value = '';
            };
            reader.readAsText(file);
        }

        function clearAllData() {
            if (confirm('‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ!')) {
                if (confirm('‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á: ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
                    bookings = [];
                    bookingId = 1;
                    saveBookings();
                    updateAdminDisplay();
                    alert('‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
                }
            }
        }

        // Set minimum date to today
        document.getElementById('date').min = new Date().toISOString().split('T')[0];

        // Load bookings on page load
        loadBookings();

        // Auto-save every 5 minutes as a backup
        setInterval(saveBookings, 300000);
    </script>
</body>
</html>
